* Libraries

Quicklisp download statistics:

http://blog.quicklisp.org/2010/11/project-download-statistics.html

colunmns: download count, has common-lisp test suite (as of quicklisp 2011-07-30).

    714 + alexandria
    596 + babel
    520 + trivial-features
    503 + cffi
    450 + cl-ppcre
    423 - trivial-gray-streams
    404 + usocket
    403 + flexi-streams
    398 + bordeaux-threads
    393 - slime
    386 - cl+ssl (thre is a test.lisp, but it's not automated, and no (asdf:operate (op asdf:test-op) ...)
    371 - chunga
    370 + cl-base64
    361 - cl-fad
    339 - md5
    327 - quicklisp-slime-helper
    323 + trivial-backtrace
    321 - rfc2388 (there is a test.lisp, but there is no asdf:test-op, and the code in test.lisp 
                   doesn't return fail/ok status, it jsut prints something to the console)
    317 - hunchentoot (there are tests and asdf:test-op, but I am affrait it might take
                       lot of work to automate it: test-op starts server and doesn't
                       stop; I am also afraid it might hang sometimes; implementation
                       would also require checking for single-threaded lisps
                       (by hunchentoot::*supports-threadss-p* ?)
                       and returning :no-resource. Leave hunchentoot for a later
                       stage)
    293 - salza2
    289 + puri
    285 - closer-mop (no asdf:test-op. there is a folder "test" with some file jeffs-code.lisp,
                      but it's a code to reproduce some particular issue. It does not seem
                      to be intended for automated regression testing of closer-mop)
    225 + anaphora
    224 + parenscript
    221 - cl-who
    207 + trivial-garbage
    201 + iterate
    193 - cl-vectors
    190 - zpng
    177 - asdf-system-connections
    174 - zpb-ttf
    173 + uffi But the test suite is non trivial (for example, it defines asdf:compile-op 
               for C files using make). Probably that's why quickisp does not
               make the uffi-tests.asd availabel for ql:quickload. A study is needed about 
               how to include this system, therefore I avoid it for now.
    173 + metabang-bind
    170 - split-sequence
    164 - vecto (there is a test.lisp, but it's not automated, intended for manual run and eye-testing of the resulting images)
    163 + cl-json
    162 + cl-containers
    161 + metatilities-base
    159 - fare-utils
    156 + weblocks (do these tests start hunchentoot? seems no, it creates mock objects for request, response, etc.)
          Unfortunately, as of today, (quicklisp:quickload :weblock-test) doesn't work,
          bacause the test suite does not compile.
          https://github.com/quicklisp/quicklisp-projects/issues/232
    156 - fare-matcher (no test-op, but there is fare-matcher-test.asd with one test defined using stefil)
    148 - drakma
    144 + cl-cont
    143 - closure-common
    140 + moptilities
    138 - f-underscore
    137 + trivial-timeout
    136 + metatilities
    135 + clsql (big test suite, requires database server(s). Runs the tests 
                 tests on the DB servers you specified in the configiration. 
                 Therefore we need to think how to represent results - we can't
                 just collect results under the same name "clsql", because 
                 different agents might have tested different servers.
                 Conclusion: very useful test suite to include into 
                 our test set, but we will do it later).
    133 + cxml (But testing it requires manual preparation of test data:
                checkout the XML test suite from w3.org CVS repostory,
                patch it, build with ant. Conclusion: desirable to fix
                improve the situation, e.g. by providing ready
                to use test data files in a .tar archive
                and downloading it using quicklisp' http utility).

* CL implementations
  CLISP/Windows - OK
  SBCL/Windows - OK
  CCL/Windows - OK
  ABCL 1.0.0 - stack overflow when compiling alexandria tests, hungs for very long time when running CL-PPCRE tests.
  Allegro Express Edition 8.2, Windows - not enough heap to compile the test.
  ECL 11.1.1, Window - quicklisp doesn't work: https://sourceforge.net/tracker/?func=detail&aid=3462618&group_id=30035&atid=398053
