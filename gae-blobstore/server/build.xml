<project xmlns:ivy="antlib:org.apache.ivy.ant"
         name="cltestgridblobstore" default="compile">

  <property name="project.dir" location="." />
  <include file="${project.dir}/init-ivy.xml"/>
  <property file="${project.dir}/build.properties"/>

  <import file="${appengine.sdk}/config/user/ant-macros.xml" />

  <path id="project.classpath">
    <pathelement path="${project.dir}/war/WEB-INF/classes" />
    <fileset dir="${project.dir}/war/WEB-INF/lib">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${appengine.sdk}/lib">
      <include name="shared/**/*.jar" />
    </fileset>
  </path>

  <target name="clean">
    <delete includeemptydirs="true">
      <fileset dir="${project.dir}/war/WEB-INF/classes"
                includes="**/*"/>
      <fileset dir="${project.dir}/war/WEB-INF/lib"
                includes="**/*"/>
    </delete>
  </target>

  <target name="resolve" description="Use ivy to resolve dependencies"
          depends="init-ivy.init-ivy">
    <ivy:resolve/>
    <ivy:report todir='${project.dir}/build-reports' graph='false' xml='false'/>
  </target>

  <target name="retrieve" depends="resolve" description="Populate lib directory">
    <ivy:retrieve pattern="${project.dir}/war/WEB-INF/lib/[artifact]-[revision].[ext]"/>
  </target>

  <target name="copyjars" depends="retrieve">
    <mkdir dir="${project.dir}/war/WEB-INF/lib"/>
    <copy
        todir="${project.dir}/war/WEB-INF/lib"
        flatten="true">
      <fileset dir="${appengine.sdk}/lib/user">
        <include name="appengine-api-*.jar" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="copyjars">
    <mkdir dir="${project.dir}/war/WEB-INF/classes"/>
    <javac
        srcdir="${project.dir}/src"
        destdir="${project.dir}/war/WEB-INF/classes"
        classpathref="project.classpath"
        debug="on" />
  </target>

  <target name="runserver" depends="compile"
      description="Starts the development server.">
    <dev_appserver war="${project.dir}/war" />
  </target>

  <target name="update" depends="compile"
      description="Uploads the application to App Engine.">
    <appcfg action="update" war="${project.dir}/war" />
  </target>

  <target name="rollback" depends="compile"
      description="Rolls back an interrupted application update.">
    <appcfg action="rollback" war="${project.dir}/war" />
  </target>

</project>

