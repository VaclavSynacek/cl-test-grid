* Current Focus
** TODO run tests with the newly added libraries on the quicklisp 2012-03-07,
   so that we can compare their results with the new quicklisp release 
   when it is out.
** TODO automate processing of library results submited by email
** TODO collect the test results for the next quicklisp release (2012-04-xx)
** TODO update README.org to reflect the current status and priorities (in
   other words, reflect the changes during the last month)
* Reports Improve 1
** TODO floating report table headers, to that when we scroll, :report:pivot:
   headers are always visible and we always see what lisp/libary/lib-worls
   corresponds to the current table cell.
** TODO Yellow color for known-fail and unexpected-ok aggregated statuses
* Reports Improve 2
** TODO Filters for pivot reports
* Backlog
** TODO a way to specify lib-wold as a quicklisp version with some 
   library versions overriden (checkout this particular 
   libraries from the scm), so that library author can quickly 
   get test result for his changes (fixes)  in scm. 
   An implementation idea to consider: almost every scm allows 
   to download asnapshot via http, so the quicklisp http machinery may
   be reused here, whithout running a shell command for 
   checkout.
   24h
** TODO code coverage: SBCL provides sb-cover. Integrate it somehow
        and publish in the reports.
        How?
        - extend the lib-result object with one more field, percentage 
          of the covered lines?
        - separate report?
        - or just output the information into the log?
** TODO osicat: automate the :no-resource condition
** TODO Test status should include separate indicator for the library compilation and loading.
** TODO ABCL, cffi tests: return :no-resource if JNA is not available
** TODO cffi tests: return :no-resource if C compilation fails on linux
** TODO cl-fad and flexi-streams use c:\tmp as a temporary directory
   on Windows; it's not very good. Maybe try to provide them
   with a temporary directory inside of the cl-test-grid working
   dir?
** TODO Do not allow empty contributor contact in test results. Instead
   always ask the contributor to provide something, nickname,
   whatever.
** TODO A restart which will allow to skip the current library        :agent:
   test suite and proceed to the next one.
** TODO how to enforce rebuild when loading an ASDF system?
   Important for ECL, because ECL bytecompiler and lisp-to-c
   compiler produce incompatible .fasl files, but ASDF
   stores the files in the same location, because both
   flavors of ECL have the same (asdf:immplementation-identifier).
** TODO quicklisp distro version in report headers may be a link to 
   list of library versions in this ql version
   (like this: http://www.quicklisp.org/beta/releases.html, but
   it's only for the latest QL).
** TODO an informer which may be embedded into a library    :report:informer:
   project page, with reports about the test statuses 
   for this single library on various platforms with
   various quicklisp versions
** TODO report overview: change "represents every test run as a separate row"  :report:overview:
   to
   "represents every <tt>test-grid:run-tests</tt> as a separate row"
   (after user will know this command from the main project description)
   ?
** TODO Description of CSV report may link to an example of the CSV report  :report:overview:
   imported to a Google Spreadsheet
   with pivot calculating avearage duration of 
   tests for every library.
** TODO spell check the reports-overview                    :report:overview:
** TODO an informer for CL implementation with libraries statuses? :report:informer:
** TODO quick access to the test run info from the pivot report table cell  :report:pivot:
   (or maybe just print the test run info to the log, like a header;
    but it is a duplication and also we will have invonviniences
    if we want to modify this infromation in the lob BLOB)
** TODO reduce non cl-test-grid output in the console (quicklisp output,
   compiler output, etc), so that cl-test-grid messages to the user
   are better visible.
** TODO save all the output to a log, so that the tests may be run in background
** TODO Limit library output file size (how?).
** TODO Prevent HTML injection via test-run-info                     :report:
** TODO finalize the terminology we use in the code
   to refer our main data: 
   - test status for a particular library
   - library test result object (includes the status 
     as well as log length, the key of the log
     in the online blob store, probably the
     library test duration)
   - list of library test results in a particular test 
     run
   - test run description, consists of lisp name,
     libraries set (think quicklisp distro),
     the user contacts, total test run duration,
     etc.
** TODO when GAE quotas (for requests, emails, anything else)
   are exceeded, recognize it and display a meaningfull
   message to the user.
** TODO watchdog for hanging tests
** TODO For all the libraries which need manual configuration
   (cffi, usocket) provide guiding message to the
   user how to configure them, before running
   the tests.
** TODO usocket test suite might need manual configuration,
   see their README. Distinguish the case 
   when the manual configuration hasn't been
   performed and return :no-resource status.
** TODO should we save library log to a file only if the tests failed, 
   or always? (now we save log in any case)
** TODO An utility to delete blobs not used in db.lisp from the blobstore :server:
** TODO classify all the errors and register as tickets
   this task is likely to be abandoned
