;;; -*- Mode: org; indent-tabs-mode: nil; coding: utf-8; show-trailing-whitespace: t -*-

# Information about test suites of CL libraries.
#
# colunmns:
#  - test suite state: may be one of:
#      '-' means no test suite,
#      '+' means test suite added to test grid
#      '+2' test suite exists, but adding it to test
#          grid will take some effotrs. It is not
#          added now, but may be added later.
#  - project name (the items are sorted by project name,
#                  although the sorging was performed
#                  manually when adding the projects
#                  one by one and may be not precise)
#  - version of Quicklisp when the project test suite
#    was reviewed
#  - Optional description of the issues with the test
#    suite (in parenthesis, may span over several lines)
#

+ alexandria 2010-11-10
+ arnesi 2012-03-07 (added to test grid, although
                     it doesn't compile on my SBCL
                     and CLISP on Windows)
+ anaphora 2010-11-10
- asdf-system-connections 2010-11-10
+ babel 2010-11-10
+2 bknr.datastore 2012-03-07 (although the main test suite of
                              bknr-datastore is alread added to
                              the test grid, there is another
                              small test suite in this project,
                              :bknr.skip-list.test. It uses
                              lisp-unit test framweorks, and
                              will be added to test grid after
                              lisp-unit api will be implemeted.
                              Also, bknr.datastore does not
                              support all the lisp compilers,
                              it would be good to return
                              :no-resource on unsupported
                              compilers).
+ bordeaux-threads 2010-11-10
+ cffi 2010-11-10
- chunga 2010-11-10
- cl+ssl 2010-11-10 (there is a test.lisp, but it's not automated, and no (asdf:operate (op asdf:test-op) ...)
+ cl-annot 2012-03-07
+ cl-base64 2010-11-10
- cl-cairo2 2012-03-07
+ cl-closure-template 2012-03-07
+ cl-cont 2010-11-10
+ cl-containers 2010-11-10
+2 cl-csv 2012-03-07 (lisp-unit support in cl-test-grid is necessary)
+ cl-fad 2010-11-10 (very simple test suite: a file test.lisp
                     with a single function "test"
                     which uses cl:assert for test conditions)
+ cl-json 2010-11-10
+ cl-interpol 2012-03-07
+2 cl-libxml2 2012-03-07 (depends on a foreign library)
+ cl-mustache
+2 cl-mysql 2012-03-07 (depends on libmysql dll, and requires
                        a running mySql server)
+ cl-num-utils 2012-03-07
+ cl-oauth 2012-03-07
- cl-opengl 2012-03-07
+ cl-ppcre 2010-11-10
+ cl-project 2012-03-07
+ cl-routes 2012-03-07
+2 cl-sqlite 2012-03-07 (depends on a foreign library: sqllite dll)
+ cl-store 2012-03-07
+ cl-unicode 2012-03-07
- cl-vectors 2010-11-10
- cl-who 2010-11-10
+ clack 2012-03-07 (Has a test suite, but it's not obvious how to run in
                    in cl-test-grid: it start hunchentoot, and hangs;
                    it is composed from several test suites of different
                    subcomponents; Conclusion: I will not
                    add it now - complex for me. It would be
                    easier for clack author to do)
- closer-mop 2010-11-10 (no asdf:test-op. there is a folder "test" with some file jeffs-code.lisp,
                         but it's a code to reproduce some particular issue. It does not seem
                         to be intended for automated regression testing of closer-mop)
- closure-common 2010-11-10
+ clsql 2010-11-10 (big test suite, requires database server(s). Runs the tests
                    tests on the DB servers you specified in the configiration.
                    Therefore we need to think how to represent results - we can't
                    just collect results under the same name "clsql", because
                    different agents might have tested different servers.
                    Conclusion: very useful test suite to include into
                    our test set, but we will do it later).
- clx 2012-03-07
+2 commonqt 2012-03-07 (requires Qt libraries, gcc + make / msvs)
- closure-common 2012-03-07
+ com.google.base 2012-03-07
+2 cxml 2010-11-10 (Testing it requires manual preparation of test data:
                    checkout the XML test suite from w3.org CVS repostory,
                    patch it, build with ant. Conclusion: desirable to fix
                    improve the situation, e.g. by providing ready
                    to use test data files in a .tar archive
                    and downloading it using quicklisp' http utility).

+ data-sift 2012-03-07
- drakma 2010-11-10
+2 elephant 2012-03-07 (Not trivial to test, involves C compiler, running database
                        instances, user-provided configuration. Postponed.)
+ external-program 2012-03-07
+2 f2cl 2012-03-07 (This system - a Fortran to Common Lisp translator
                    - seems to have a test suite... but it is
                    not conventional. A lot of asdf systms, and
                    no test framwork supported at the moment
                    by test grid is used)
- f-underscore 2010-11-10
+ fiveam 2012-03-07
+2 fare-matcher 2010-11-10 (no test-op, but there is fare-matcher-test.asd
                            with one test defined using stefil)
- fare-utils 2010-11-10
+ flexi-streams 2010-11-10
+2 gbbopen 2012-03-07 (Needs investigation.
                       The points:
                       - I am not sure how to detect test failures,
                         although form the sources it seems like
                         cerror function is used to signal failures;
                       - what is the right way to run tests - there
                         is no asdf:test-op, but some infor in the readme;
                         I did differently that specified in the readme,
                         just did (asdf:operate 'asdf:load-op "gbbopen-test"),
                         and the tests run
                       - There are several test systems, at least:
                         gbbopen-test, portable-sockets-test, portable-threads-test;
                         I don't know if all these are self-contained, fully automated tests.
                         gbbopen-test completed without any erros on my SBCL on Windows,
                         but portable-sockets-test hangs after the message on console:
                         Performing passive-socket and connection tests on 9876...
                       - The tests should be run "in a fresh environment", i.e.
                         to run the tests again, lisp should be restarted.
                         I am not sure if it's a problem for cl-test-grid.
                         So far, all the test suites might be run more than once,
                         although when the contributors run tests, the test running
                         process is organized so, that all the test sutes are run only
                         once per lisp process execution.)
- hunchentoot 2010-11-10 (there are tests and asdf:test-op, but I am affrait it might take
                          lot of work to automate it: test-op starts server and doesn't
                          stop; I am also afraid it might hang sometimes; implementation
                          would also require checking for single-threaded lisps
                          (by hunchentoot::*supports-threadss-p* ?)
                          and returning :no-resource. Leave hunchentoot for a later
                          stage)
- hu.dwim.asdf 2012-03-07
+ hu.dwim.defclass-star 2012-03-07
+ hu.dwim.stefil 2012-03-07
+ hu.dwim.walker 2012-03-07
+2 hu.dwim.syntax-sugar 2012-03-07 (the source file source\\unicode\\package.lisp
                                    can not be compiled on my SBCL windows, because
                                    the default external format :cp-1251 can not read
                                    this file)
+ ieee-floats 2012-03-07
+2 iolib 2012-03-07 (Requies a echo server to run run. Hangs on CCL.
                     As iolib is not implemented for windows,
                     on windows we need to return a hardcoded :no-resource;)
+ iterate 2010-11-10
+ kmrcl 2012-03-07
+ let-plus 2012-03-07
+2 lift 2012-03-07 (needs at least some care: now the test
                    sute creates a directory "test-results" full of files,
                    and does not cleans it up. Also it prints output
                    to console (and not into the log file I redirected
                    the *standard-output* and *error-output* to)
+ linedit 2012-03-07
- lisp-unit 2012-03-07 (there is a file internal-tests.lisp, but
                        it doesn't seem to be prepared to
                        be run by someone else except for
                        the lisp-unit developers)
- lispbuilder 2012-03-07 (It's a collection of projects, many of which
                          are forks of original projects; some have
                          test suites, but build on custom
                          test frameworks (yacc, regex, clawk),
                          and use different packages than the original
                          projects. I would be glad if someone
                          provide cl-test-grid adapater for
                          lispbuilder projects; but I myself
                          will continue now with more easy
                          to test projects)
+ local-time 2012-03-07
+2 lla 2012-03-07 (depends on a foreign library, which may be absent)
+ ironclad 2012-03-07 (the test suite is broken - doesn't even compile.
                       But it's easy to fix, opened a ticket:
                       https://github.com/froydnj/ironclad/issues/11
                       After it will be fixed I will add ironclad
                       tests to the test-grid)
- manifest 2012-03-07
+2 mcclim 2012-03-07 (There are some tests, but I don't know
                      how automated they are. Anyway, this
                      test suite is too complex for me to add,
                      some mcclim developer would be in a
                      better pisition.)
- md5 2010-11-10
+ metabang-bind 2010-11-10
+ metatilities 2010-11-10
+ metatilities-base 2010-11-10
- monkeylib-pathnames 2012-03-07
- monkeylib-test-framework 2012-03-07
+ moptilities 2010-11-10
+ named-readtables 2012-03-07 (strange thing: it contains a copy of RT
                               test framework, but in it's own package
                               named-readtables-test)
+2 osicat 2012-03-07 (has test suite, but has difficult :no-resource
                      condition - cffi-groveler involved)
- parse-number 2012-03-07 (there is a test.lisp and it's easy to run,
                           but there is no way to retrieve test
                           results programmatically)
+ parenscript 2010-11-10
+2 postmodern 2012-03-07 (but requires a running PostgreSQL server
+2 protobuf 2012-03-07 (Has test suite, but Quicklisp and ASDF
                        signal "Component "protobuf-test" not found."
                        error. Also, probably this sistem requires
                        some configuration, at least protobuf.asd
                        defines several variables which shoudl be
                        set by user, according to the comments)
+ puri 2010-11-10
- restas 2012-03-07
- quicklisp-slime-helper 2010-11-10
- quickproject 2012-03-07
- rfc2388 2010-11-10 (there is a test.lisp, but there is no asdf:test-op, and the code in test.lisp
                      doesn't return fail/ok status, it jsut prints something to the console)
- salza2 2010-11-10
- slime 2010-11-10
+ split-sequence 2012-03-07
+2 static-vectors 2012-03-07 (non trivial to setup - involves cffi-grovel)
+ s-xml 2012-03-07
- toot 2012-03-07 (the test.lisp file is not an automated suite, but
                   a code to start the server and create
                   several request handlers, to be tested manually
                   [as far as I understand])
+ trivial-backtrace 2010-11-10
+ trivial-features 2010-11-10
+ trivial-garbage 2010-11-10
+ trivial-gray-streams 2013-02-17+ (implemented testsuite myself, will be captured by the next quicklisp version)
+ trivial-http 2012-03-07
+ trivial-shell 2012-03-07
+ trivial-timeout 2010-11-10
+ trivial-utf-8 2012-03-07
+2 uffi 2010-11-10 (But the test suite is non trivial (for example, it defines asdf:compile-op
                    for C files using make). Probably that's why quickisp does not
                    make the uffi-tests.asd availabel for ql:quickload. A study is needed about
                    how to include this system, therefore I avoid it for now.
+ usocket 2010-11-10
- vecto 2010-11-10 (there is a test.lisp, but it's not automated, intended for manual run and eye-testing of the resulting images)
+2 weblocks 2012-03-07 (judging by the erros signalled
                        "The variable HUNCHENTOOT:*ACCEPTOR* is unbound."
                        needs hunchentoot to be started)
+ yaclml 2012-03-07
+ yason 2012-03-07
- zpng 2010-11-10
- zpb-ttf 2010-11-10
