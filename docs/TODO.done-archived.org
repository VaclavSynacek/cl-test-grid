;;;; -*- Mode: org; indent-tabs-mode: nil; coding: utf-8; show-trailing-whitespace: t -*-
* Milestone 0
** DONE information about test run:
   CLOSED: [2011-12-18 Вс 01:41]
   lisp-version-string, 
   lib-world, 
   author contact (get it from some settings file), 
   date, 
   run-duration
** DONE organize the database file format                                :db:
   CLOSED: [2011-12-18 Вс 01:42]
** DONE format the DB equally on all the Lisps                           :db:
   CLOSED: [2012-03-01 Чт 05:02]
   so that diff shows only new records.
   (use pprint ?)
   4h
** DONE better decision for library name representation.
   CLOSED: [2011-12-18 Вс 01:42]
     This representation is used in the:
     - libtest method parameter (eql specialized)
     - in the database and testrun datastructure.
     Possible alternatives:
     a keyword
        good for READ (package independent),
        good for EQL specializer
        good for GETF when working with the database
     a symbol from the test-grid package
        - good for EQL specializer
        - package dependent in READ
        - good for GETF when working with the database
        - adds one more (unnecessary) way to represent a library 
          in addition the specified for ASDF and Quicklisp
     or a downcased string
        - needs special handling in libtest eql specialization
        - good ro READ (package independent)
        - needs care to work with GETF when working with the database      
** DONE A tool to generate fake DB content to test reporting
   CLOSED: [2011-12-18 Вс 01:42]
** DONE simpliest reporting to overview the libraries test statuses [6/6] :report:
   CLOSED: [2012-01-13 Пт 14:26]
*** DONE Test Runs report: every test run as a row in a table :report:testruns:
    CLOSED: [2012-01-13 Пт 14:26]
     + legend or a tooltip in the report for test statuses
     + color for statuses
     + use the online blob URL in the report
*** DONE A pivot -like table report of library test results, allowing :report:pivot:
    CLOSED: [2011-12-18 Вс 01:43]
    rows/columns to be any of quicklisp distro, lisp version
    library name. With grouping and sorging.
*** DONE Fix rows and columns highlight in the pivot reports   :report:pivot:
    CLOSED: [2012-01-13 Пт 14:24]
*** DONE CSV export of the database to use it then with spreadsheets, :report:csv:
    CLOSED: [2011-12-18 Вс 01:57]
     google fusion tables, etc. Initial intent
     was to format it as a pivot for various projections 
     (by quicklisp releases, by platform, etc).
     But neither google docs spreadsheet, nor google fusion
     table allow as to format results as we want
     (the main problem, it is impossible to use
     a custom aggregation function for pivot
     cells, because standard aggregation functions
     are numeric, but we want a report cell
     to represent test result(s) for a particular
     library, i.e. :ok, :fail, :no-resource).
     5h
*** DONE Test that the test-duration field value                 :report:csv:
    CLOSED: [2011-12-28 Ср 20:20]
     (Common Lisp rational) can be read
     by spreadsheet software (MS/Open Offices,
     Google Spreadsheets).     
*** DONE an overview page with brief explanation of and links to all the reports :report:overview:
    CLOSED: [2011-12-18 Вс 02:18]
** DONE simple UI (command line) with guiding messages                   :ui:
   CLOSED: [2012-01-13 Пт 14:23]
   for the user who runs the tests. Spend as little 
   efforts as possible on this task, to release quickly.
   4h
** DONE readme with explanation of the project goal and              :readme:
   CLOSED: [2012-01-10 Вт 05:05]
   how to use it
   5h
** DONE change db format                                                 :db:
   CLOSED: [2011-12-18 Вс 01:55]
   + test run as plist (:descr <descr> :run-results <run-results>)
     instead of just (<descr> <run-results>)
   + run-results as a list instead of plist; libname
     which was a plist key is now a property of the lib-result 
     object. It is more convenient for standard mapping functions, 
     instead of current do-lib-results.
** DONE add more libraries: total number of 20 libraries              :agent:
   CLOSED: [2011-12-18 Вс 01:55]
   is enough for the beginning.
   Result: we have 23 libraries.
** DONE when loading of a library or library test system              :agent:
   CLOSED: [2011-12-18 Вс 01:55]
   fails, ensure we have the error description in the output
   0.5h
** DONE The "thank you" message: where exactly to submit test results?
   CLOSED: [2011-12-18 Вс 01:55]
   Specify an email or issue tracker of the cl-test-grid project.
** DONE how to store public (central) database and failed library 
   CLOSED: [2011-12-18 Вс 01:55]
   outputs (files).
   An appealing way is to store it in the same git repository 
   on github, but with the std-out files the repository will 
   quickly grow to an unconvenient size (for new people the
   checkout procedure will be too long to be considered
   convenient)
   5h
   Solution: files are stored in Google App Engine blob store.
** DONE More detailed output for libraries using the RT test
   CLOSED: [2011-12-18 Вс 01:55]
   framework. Ensure the libs with other test framework
   are all have sufficiently detailed output too.
** DONE Log of the BABEL tests (generated by the Stefil test          :agent:
   CLOSED: [2011-12-18 Вс 01:55]
   framework) does not contain information about
   errors. Add these details.
** DONE Some libraries (babel and cl-json) stil print messages to 
   CLOSED: [2011-12-18 Вс 01:56]
   console, meaning their output is not only *standard-output*
   and *standard-error*. Fix that, all the output
   should be in the log files, but not on console.
** DONE run the tests on all the implementations available for us.
   CLOSED: [2012-01-12 Чт 09:45]
** DONE publish the reports
   CLOSED: [2011-12-28 Ср 06:57]
** DONE test-run-info.lisp as attachment, instead of letter body     :server:
   CLOSED: [2011-12-29 Чт 04:53]
** DONE Fix lisp name sorting in pivot_lib-lisp_ql.html              :report:
   CLOSED: [2011-12-28 Ср 08:05]
** DONE finalize the decision what command user runs
   CLOSED: [2011-12-20 Вт 04:19]
   to performs the tests. Describe this main command
   in the README (in the first paragraph).
   The solution: user runs (load "agent.lisp"); precondition: quicklisp installed.
** DONE When the settings file is populated, inform user where     :settings:
   CLOSED: [2011-12-31 Сб 01:59]
   it is stored (and to be sure user understood us, ask
   him to press Enter before continuing).
** DONE When asking user for email, explain him more carefully     :settings:
   CLOSED: [2012-01-12 Чт 09:45]
   how the email will be used and ensure there is a way
   to avoid providing email.
** DONE ECL: recover from stack alexandria overflow and continute tests :ecl:agent:
   CLOSED: [2012-01-11 Ср 07:21]
** DONE ABCL: recover from cl-ppcre hung-up and continue tests   :abcl:agent:
   CLOSED: [2012-01-11 Ср 07:21]
** DONE Optimize horizontal space in the reports: the headers        :report:
   CLOSED: [2011-12-31 Сб 04:58]
   take to much space
** DONE more abstract accessor to parts of DB info instead of
   CLOSED: [2011-12-20 Вт 04:29]
   getf by properties: run-descr, run-results.
   1h
** DONE safe-read database
   CLOSED: [2011-12-20 Вт 04:29]
** DONE create a project with asdf system
   CLOSED: [2011-12-20 Вт 04:29]
   0.5h
** DONE DB file path based on the asdf system location
   CLOSED: [2011-12-20 Вт 04:29]
   0.5h
** DONE accumulate failed library output
   CLOSED: [2011-12-20 Вт 04:29]
   1h
** DONE run-libtests: redirect the library output to log file directly
   CLOSED: [2012-01-10 Вт 05:01]
   without caching it in memory. It is more convenient when you are 
   watching the testing process, you can observe the file being 
   populated with logs (because some libraries, like flexi-streams, 
   take time about minute to finish, and if during this minute
   nithing happens it is not user-friendly)

* Milestone 0.1
** DONE move closed TODO items to another (archive) file, so that the
   CLOSED: [2012-03-01 Чт 05:10]
   web presentation of the TODO file will be understandable 
   for the public.

** DONE new status, :expected-failure (or better :know-failure).
   CLOSED: [2012-03-01 Чт 05:05]
   Also maybe :unexpected-ok.
** DONE clean up the pivot reports Lisp code       :report:pivot:codequality:
   CLOSED: [2012-03-01 Чт 05:02]
* Milestone 0.3.1
** DONE automatically find regressions between quicklisp disto versions
   CLOSED: [2012-03-17 Ð¡Ð± 22:45]
** DONE test results detailed to individual tests for remaining test frameworks
   CLOSED: [2012-03-17 Ð¡Ð± 22:45]
** DONE add more libraries
   CLOSED: [2012-04-06 Пт 04:43]
   Added 34 libraries, the total number now is 57.
** DONE shorten the blob keys of online library logs
   CLOSED: [2012-04-06 Пт 04:46]

* 0.3.2 Reports Improve 1
** DONE floating report table headers, so that when we scroll, :report:pivot:
   CLOSED: [2012-04-22 Вс 04:14]
   headers are always visible and we always see what lisp/libary/lib-world
   corresponds to the table cell we are interested in.
** DONE Yellow color for known-fail and unexpected-ok aggregated statuses
   CLOSED: [2012-04-22 Вс 04:14]

* 0.3.3 Current: 
** DONE automate processing of library results submited by email
   CLOSED: [2012-06-15 Пт 01:46]
   
* 0.3.4 Test result for Quicklisp 2012-03, 2012-04
** DONE run tests with the newly added libraries on the quicklisp 2012-03-07,
   CLOSED: [2012-04-22 Вс 04:13]
   so that we can compare their results with the new quicklisp release 
   when it is out.
** DONE collect the test results for the next quicklisp release (2012-04-xx)
   CLOSED: [2012-04-22 Вс 04:13]
** DONE analyze the failures of Quicklisp 2012-04.
   CLOSED: [2012-07-23 Пн 04:39]
* 0.4.0 Test Running Robustness - lisp-agent
** DONE top level error handler in test-grid-agent:main
   CLOSED: [2012-07-23 Пн 20:17]
   write the unhandled error stacktrace (with causes)
   into log and exit - never enter debugger as the 
   program should be suitable to run in background with cron.
** DONE prevent starting of two agents (try to open a socket on a constant port)
   CLOSED: [2012-07-23 Пн 22:04]
** DONE create test-grid-agent:api-compatible-p
   CLOSED: [2012-07-23 Пн 23:45]
** DONE check what lisps other than CCL can run lisp-agent
   CLOSED: [2012-07-25 Ср 19:03]

** DONE update README.org to reflect the current status and priorities (in
   CLOSED: [2012-07-25 Ср 19:06]
   other words, reflect the changes during the last month)
** DONE prepare the announcement for the mailing-list
   CLOSED: [2012-07-27 Пт 05:48]
** DONE publish the lisp-agent - merge lisp-agent to master
   CLOSED: [2012-07-27 Пт 05:48]
** DONE Give every agent and unique ID. store the ID in the agent persistence.
   CLOSED: [2012-07-24 Вт 03:20]
** DONE error handling in the main process - during a test run and in other situations
   CLOSED: [2012-07-23 Пн 04:21]
   For example, after testing some library, the output file with library
   status is not found. Record :FAIL and proceed to further libraries.
   How to handle error during test results submission?
** DONE Agent: when test results upload failed, do not mark this lisp as tested in persistence.
   CLOSED: [2012-07-10 Вт 15:47]
** DONE run each test suite in a separate process
   CLOSED: [2012-06-15 Пт 01:44]
** DONE enforce the libraries source code recompilation on every test run
   CLOSED: [2012-07-09 Пн 16:54]
   by configuring asdf:output-translations to a temporary 
   subdirectory in the test-run directory
* 0.4.1 Code cleanup after finishing lisp-agent
** DONE review test suites which have hard-coded failures
   CLOSED: [2012-08-03 Пт 04:20]
   due to hang-ups or other problems and consider
   removing the hardcoded failures as we now have
   timeouts for hang-ups.
** DONE push forward breaking-up the old monolitic module test-grid:
   CLOSED: [2012-08-03 Пт 03:22]
   test grid systems will consist of modules for:
   - testsuites 
     a function libtest(libname) runs test suite
     of the specified library, downloading the lib from quicklisp
     if necessary, and returns test result in a unified format.
     I.e. the module knows how to invoke the library test suite
     and has adapters for test results of various test frameworks
     to the testgrid test result format.
   - agent
     the program with can run test in child lisp processes,
     knows which lisps the contributor has on the machine,
     decides when to run tests, and can upload the test
     results to the central server.
     [the changes required are small - agent will receive
     some code from the current test-grid.lisp,
     for example test suite log header/footer printing.
     Maybe the test suite log will include whole lisp
     process output, from the lisp startup (now we 
     start logging bit later, right before invoking
     the test suite)]
   - admin
     code to receive test results and add to db
     [remains unchanged]
   - reporting
     [reamains unchanged]
   - blobstore
     [remains unchanges]
   - data 
     objects moving between other modules: test run, test results,
     printing for these objects; and the database
   - utils

** DONE agent fs structure functions: make the workdir root
   CLOSED: [2012-08-03 Пт 03:21]
   a configurable property of agent, and fs structure
   functions shoud accept agent as a parameter.

   Fixes user request by Greg Pfeil: don't install quicklisp in ASDF source registry,
   https://github.com/cl-test-grid/cl-test-grid/issues/5

   In future it will allow for increased speed on multiprocessor
   systems by starting several agent processes, each assigned
   different set of lisp implementations. It would require
   another agent config property - lock-port, for the socket
   whcih assures agent is a signelton. Every 
   agent have different work-dir and different port.

   Several agents may even run in different threads
   of a single lisp process (if global shared libraries
   like asdf whould allow this).
* 0.5.0 Separate status value for compilation failure
  Important in general and a user reques by Juan Jose Garcia-Ripoll.
** DONE Test status should include separate indicator for the library compilation and loading.
   CLOSED: [2012-08-17 Пт 21:48]
   This allows to add even libraries without test cases to the
   test grid.

* 0.5.1 Test loading (including fresh recompilation) of every ASDF system Quicklisp.
  This means even if the library doesn't have a test suite,
  or the test suite is not yet integrated into the test-grid,
  we will know it's compilation status.

  Complications: one project may have more than one ASDF system,
  and in such case it's not clear how to relate compilation
  failures with test suite status, if only part of ASDF systems
  failed to compile.
** DONE Change agent to perform load test of every ASDF system in Quicklisp
   CLOSED: [2012-09-01 06:43]
** DONE Continuable test runs
   CLOSED: [2012-09-04 Вт 02:06]
   Don't loose test run results if it was interrupted (due to errors, network outage or agent termination)
** DONE Workaround the GAE issue https://code.google.com/p/googleappengine/issues/detail?id=8032
   CLOSED: [2012-09-04 Вт 02:05]
** DONE rework ABCL report
   CLOSED: [2012-09-14 Пт 06:39]
** DONE make sure old reports work when DB contains ASDF systems load results
   CLOSED: [2012-09-10 06:43]
** DONE collect results for libraries missed in Quicklisp 2012-09-09 results
   CLOSED: [2012-09-17 Пн 03:39]
   Some are missed because of agent bug: list of project was retrieved
   from wrong (old) quicklisp:
     cartesian-product-switch, cl-cheshire-cat, cl-grace, coleslaw,
     com.clearly-useful.iterator-protocol,
     com.clearly-useful.protocols, com.clearly-useful.sequence-protocol,
     formlets, glu-tessellate, infix-dollar-reader, lambda-lift,
     optima, place-modifiers, pzmq.

   bknr-datastore testsuite was not run because it was added to testgrid
   as bknr.datastore.

   Also run bknr-datastore on quicklisp 2012-08-11.

** DONE The list of projects to test should be reteieved from the quicklisp
   CLOSED: [2012-09-17 Пн 02:09]
        tested by agent in child processes, but not the quicklisp used
        to run the agent itself.
** DONE remove old versions of perform-test-run, run-tests, submit-logs.
   CLOSED: [2012-09-17 Пн 02:09]
** DONE rework and announce new quicklisp diff report
   CLOSED: [2012-09-18 Вт 00:21]
   <in progress>
** DONE remove the TODO list from the bottom of perform-test-run.lisp
   CLOSED: [2012-09-18 Вт 02:52]
** DONE when killing child process, sometimes we may have "No such process" simple-error
   CLOSED: [2012-09-18 Вт 06:34]
   if the process already finished. Handle it.
** DONE Testsuite timeout detection should sustain laptop hibernation
   CLOSED: [2012-09-18 Вт 21:49]
** DONE db.lisp: deterministic formatting of load-results
   CLOSED: [2012-09-19 Ср 00:21]
** DONE db.lisp: don't print testsuite values if there is no testsuite (values are NIL)
   CLOSED: [2012-09-19 Ср 00:21]
   don't print testing status/duration/log-key when absent
   (relevant for new resuls where most of the systems don't have test suite)
** DONE db.lisp: don't print load-results when absent
   CLOSED: [2012-09-19 Ср 00:21]
   (only releant for old results submitted before agent become able to test loading)
** DONE open launchpad tickets for the issues revealed by the quicklisp diff report
   CLOSED: [2012-09-19 Ср 01:27]

** DONE the load failures report, with libraries sorted topologically by dependencies
   CLOSED: [2012-09-25 Вт 22:10]
** DONE test fresh ECL to validate this fix:
   CLOSED: [2012-09-25 Вт 06:03]
   http://sourceforge.net/mailarchive/forum.php?thread_name=CANejTzrbiG71bStNg54J-sJ7QDBRwPgoOOGOWt7unrHfwMkByQ%40mail.gmail.com&forum_name=ecls-list
** DONE profile the reporing, to see why it's so slow now and fix
   CLOSED: [2012-09-26 Ср 03:58]
   The reason was set-exclusive-or, which takes minutes
   on large lists. Introduced fast-exclusive-or
   which uses hash tables if the arguments allow -
   :TEST is a designator of EQ, EQL, EQUAL or EQUALP.
** DONE document the new version of agent (how to run it, that it takes long and may be restarted)
   CLOSED: [2012-10-01 Пн 04:56]
** DONE increase the load-test timeout from 1 to 2 minutes
   CLOSED: [2012-09-15 Сб 10:02]
** DONE increase the load-test timeout from 2 to 5 minutes
   CLOSED: [2012-09-21 Пт 07:37]
* 0.6.0 Reports Improve 2
** DONE combine information about load failures with information about system dependencies
   CLOSED: [2012-10-01 Пн 07:12]
   It will allow us to find "root" compilation blockers -
   the libraries which do not compile and block other libraries
   compilation.

   After the milestone 0.5.1 we will have compilation status
   for all the ASDF systems in quicklisp on all the lisp implemetations.

   If we combine the compilation statuses with the dependency
   information, it will become visible, what libraries should
   be fixed first to make certain lisp implementation wider adopted.

   Of course, quicklisp download statistics we have already
   provides some information about "importance" of libraries,
   but the dependency information will make the situation more clear.

   This feature is suggested by Juan Jose - the ECL maintainer.


   We now have information which ASDF systems fail to load on particular Lisps
   (this is implemented for the 56 libraries already included into the test-grid,
   and After the milestone 0.5.1 we will have compilation status
   for all the ASDF systems in quicklisp on all the lisp implemetations).

   But ASDF systems depend on each other, so if system A fails to load,
   all other systems which depend on A directly or indirectly fail to load as well.
   So if we just list all the load failures, we are going to have large list, but will
   be unable to see where the real problem is, what is necessary to fix.

   The idea is to combine the information about load failures with information
   about dependencies to find out the root "blockers" - the libraries failing by
   themselves and blocking others.

   To do so we may just sort the ASDF systems by dependencies
   (https://en.wikipedia.org/wiki/Topological_sorting), and the root blockers
   will be at the top of the list.

   I envision simple report in the form

   system-a: blocked-by: <list of failed systems on which system-a depends>; blocks <list of failed systems depending on system-a>
   system-b: blocked-by: <list of failed systems on which system-b depends>; blocks <list of failed systems depending on system-b>
   ...

   While the real data is not available, you can just hardcode
   two stub functions:
   (load-failed-p <system name>) => true or false,
   and
   (dependencies <system name>) => list of systems on which the given system depends.

   With hardcoded stub information we may already experiment and develop with the report.

   Also, we can extract the dependency information for the real implementation
   of the DEPENDENCIES function. It may be done either by loading
   every system and querying ASDF, or from quicklisp - see file quicklisp\dists\quicklisp\systems.txt
   in your quicklisp installation. Note, there is no way to detect 100% exact
   dependency information, because .asd files are just lisp code,
   and some of them just do (asdf:operate 'asdf:load-op 'something)
   instead of putting something to :depend-on clause of defsystem macro.
   But the information which IS possible to extract will give us good results
   I believe.

** DONE the diff report (aka regressions report) - diff along various dimentions
   CLOSED: [2012-10-01 Пн 08:26]
   Currently we can only find differences between test statuses
   of a library on different quicklisps, when the lisp implementation
   version is a constant.
   We should generalize this to compare test results on two
   different versions of a compiler (windows/linux or old compiler
   version and new one). Also when comparing test results,
   we must be more flexible than matching results only of
   exactly the same lisp-implementation-identifier,
   because we don't always has exactly this lisp.
   For example when we compare the lates qicklisp version
   with the previous one, we may want to consider ecl-12.7.1-dee2506a-linux-x86-lisp-to-c
   and ecl-12.7.1-xxxxffff-linux-x86-lisp-to-c as the same compiler,
   because otherwise we might just have no results to compare.

   In other case, we want to compare test results of these two
   compilers. Then we consider them different and
   different sides of comparision: one on the left hand,
   and another on the right side.

   At first sight the task may be solved
   by parametrizing the report by two functions:
   - the one which decides what results to put to left side and to right side
   - a predicate which decides if a result cell from the left side is comparable
     to a result from the right side.

  ==============
  The solution:
  - select two sets of results
  - compute exclusive-or of them
  - print pivot with necessary columns and rows

  Example is the compiler-diff report and quicklisp-diff

** DONE limit amount of data included into to HTML reports to the last 3 quicklisp releases 
   CLOSED: [2012-08-15 Ср 20:42]
   to improve the page performance and load time.
** DONE remove the :load-failed status from DB and reporting
   CLOSED: [2012-10-01 Пн 08:48]
** DONE document the lisp functions for test results access and report generation,
   CLOSED: [2012-10-08 Пн 09:03]
   provide source code examples
** DONE describe the load-failures, the compiler-diff and quicklisp-diff
   CLOSED: [2012-10-08 Пн 09:14]
   reports on the reporting page

   Sketch of the reporing page structure:

   - data collected by test-grid
   - how to load the data: repository and ASDF systems
     git clone
     git clone
     asdf:*central-regitsty*
     (*db* (load-db))
     (in-package :test-grid-reporting)

   - simpliest list-failures example:

   - diffs:
     compiler diff
     quicklisp diff

   - representation tools: pivots

   - load failures + dependencies

** DONE different result-spec for known failures? and different color
   CLOSED: [2012-10-09 Вт 08:22]
** DONE library mainainer page
   CLOSED: [2012-10-13 Сб 22:54]
   with reports about the test statuses
   for this single library on various platforms with
   various quicklisp versions.

** DONE remove or wrap nicely the global variable *failures* from the dependencies-and-blockers.lisp
   CLOSED: [2012-10-14 Вс 02:36]
** DONE Document the RESULT objects instead of FAILURE. Link to the library reports.
   CLOSED: [2012-10-15 Пн 14:17]
** DONE generate reports for quicklisp 2012-10-13
   CLOSED: [2012-10-17 Ср 03:27]
** DONE fix the quicklisp diff report so that table cell which don't have a counterpart are not displayed
   CLOSED: [2012-10-17 Ср 03:27]
   I.e. if a library was testsed on that compiler in new quicklisp,
   but was not in the previous quicklisp, exclude this row from the report.
** DONE widely announce library reports, so that the developers know where to find test results
   CLOSED: [2012-10-23 Вт 05:40]
** DONE file system results storage for Juan Jose
   CLOSED: [2012-10-23 Вт 05:40]
** DONE [6 h] Prevent HTML injection via test-run-info
   CLOSED: [2012-12-19 Ср 22:05]
* 0.6.1 Some fixes and improvements
** DONE memoization of the implementation-identifier generic function is not portable
   CLOSED: [2012-10-23 Вт 05:58]
   in particular, it's known that fare-memoization can't memoize it on ACL,
   see https://groups.google.com/d/topic/cl-test-grid/Vnl3kHJbQ0M/discussion
** DONE ensure the tesg-grid-testsuites code is recompiled when necessary
   CLOSED: [2012-08-15 Ср 19:11]
   The libraries being tested are recompiled at every test run.
   It would be good to ensure test-grid-testsuites code is also correctly
   recompiled.
   Related thread on asdf-devel:
   http://lists.common-lisp.net/pipermail/asdf-devel/2012-July/002548.html
** DONE move test-grid::print-log-footer to the test-grid-agent package,
   CLOSED: [2012-10-23 Вт 05:59]
   and call it only form the agent process, not from the child, test suite
   running, process.
** DONE backtrace on errors in agent.log
   CLOSED: [2012-08-15 Ср 19:09]
** DONE Do not allow empty contributor contact in test results. Instead
   CLOSED: [2012-08-20 Пн 01:56]
   always ask the contributor to provide something, nickname,
   whatever.
** DONE Prevent child lisp process entering debugger.
   CLOSED: [2012-08-15 Ср 19:09]
   Note, different lisps treat unhangled signals during -eval
   differently: ECL exits with status 1, CCL enters debugger
   and hangs.

* 0.7.0 Wrap-up the active development phase
** DONE [0.5 h] Increase load timeout 2 times - to 10 minutes. Increas test timeout to 15 minutes.
   CLOSED: [2012-11-29 Чт 05:31]
** DONE doc update
   CLOSED: [2013-01-23 Ср 10:42]
** DONE [4 h] shorten the .fasl file paths to avoid long path problems on windos
   CLOSED: [2013-01-27 Вс 16:01]
** DONE check why git pull doesn't work with cron
   CLOSED: [2012-12-15 Сб 23:11]
** DONE [60 h] Immediate test results avaiability, without waiting for admin
   CLOSED: [2012-12-22 Сб 09:34]
   Solution: implemented test-grid-storage, based on sptm
** DONE [2 h] Shortly document the test-grid-storage features in the main README.org.
   CLOSED: [2013-01-24 Чт 16:32]
** DONE [1 h] Document the result db access via test-grid-storage in the reporting/README.md
   CLOSED: [2013-01-24 Чт 16:32]
** DONE [40 h] Move online log storage to Google Cloud Storage from Google App Engine.
   CLOSED: [2013-03-03 Вс 20:06]
   GAE Blobstore used now to store logs costs for our application at least $108 a year.
   Also we have seen GAE stability/user support issues.
   We moved to Google Cloud Storage.
   See more info here:
   http://avodonosov.blogspot.com/2013/02/quest-for-immutable-static-files-hosting.html

   Logs registered in all cl-test-grid databases (cl-test-grid-results
   git repository and all test-grid-storage storages) are moved
   to Cloud Storage under the same names.

   Old GetBlob servlet redirects to Cloud Storage if the log is not
   found in blobstore.
*** DONE move to free GAE plan
    CLOSED: [2013-03-03 Вс 20:05]
*** DONE Blob ID generator (random)
    CLOSED: [2013-01-24 Чт 16:33]
*** DONE lisp client for the Upload2 servlet, including gzipping and limiting file size
    CLOSED: [2013-01-24 Чт 16:33]
*** DONE test lisp client on real data
    CLOSED: [2013-01-24 Чт 16:33]
*** DONE Upload2: limit the file size
    CLOSED: [2013-01-24 Чт 16:33]
*** DONE Upload2: limit number of files
    CLOSED: [2013-01-24 Чт 16:33]
*** DONE Upload2: proppagate saveBlob erros to the main thread
    CLOSED: [2012-12-23 Вс 04:59]
*** Apache license for commons file upload
*** document the design-decision
*** Google Storage: restrict cl.test.grid@gmail.com rights to the bucket only, not have it as a member of the project
*** policy condition for cl-test-grid-blobs: cl.test.grid.user@gmail.com must give full access to the bucket owner
*** delete cl.test.grid.user account from google and Amazon if not necessary (including from policies)
*** DONE allow result storage names to be specified for each lisp-exe. If specifed,
    CLOSED: [2013-01-24 Чт 17:38]
    the (result-storage-space agent) is not used for this lisp-exe.
** DONE configure robots.txt so that web crawlers do not read GAE blobs
   CLOSED: [2012-12-22 Сб 09:34]
   it takes to much "frontend hours" and google bills me for that.
   This issue is related to the old blobs accessible via
   http://cl-test-grid.appspot.com/blob?key=XXXXX.

   The new blobs, stored on the Google Cloud Storage will
   not take fronted hours. Probably we may want to limit
   the network transfer, but we will see later.

** DONE [24 h] document the code base
   CLOSED: [2013-03-23 Сб 11:11]
** DONE [4 h] docs: move test running instructions into agent/README.md
   CLOSED: [2013-01-19 Сб 09:42]
** DONE [4 h] docs: move reporting tutorial from reports-overview.html to reporting/README.md
   CLOSED: [2013-01-19 Сб 09:42]
** DONE [1 h] remove the ecl-12.7.1-ce653d88 results
   CLOSED: [2013-01-19 Сб 09:43]
** DONE [1 h] remove the Dave Cooper's results broken by absense of some .lisp files in his quicklisp
   CLOSED: [2013-01-24 Чт 16:34]
** DONE [2 h] results older that 3 recent quicklisps should be archived to cl-test-grid-results
   CLOSED: [2013-01-24 Чт 16:34]
** DONE [3 h] db format. change :contact (:email "someone@host.com) to just :contact-email "someone@host.com"
** DONE contributor monthly summary.
   CLOSED: [2013-01-24 Чт 23:04]
   Now that test grid agent can be run by cron, sending confirmation
   email to contributor for every test result doesn't make sense,
   because the contributor is anaware when testing happens. But providing
   feedback is necessary. We may send a monthly digest to contributor
   summarizing the test results received from his agent(s). May be implemented
   as a cron task running say at the 8th of every month (so that admin has
   time to commit all the resutls to db.lisp and the digest
   producer task sees them). Admin should be BCC'ed in these emails.
   Should it be a single email for all contributors and the mailing list,
   or each contributor should be emailed individually?

   Solution: the email is sent manually with help of
   tg-reporting::contributors function, which prepares the email test.

* March-April 2013
** DONE ABCL 14300 (ensure utf-8)
   CLOSED: [2013-03-07 Чт 04:27]
** DONE ABCL HEAD (14420) (ensure utf-8)
   CLOSED: [2013-03-07 Чт 06:48]
** DONE ql 2013-02-17 on windows
   CLOSED: [2013-03-16 Сб 15:16]
** DONE send the test contribution digest and ask Pat to remove ecl-12.2.1-ceaff1a7-macosx-x86-bytecode
   CLOSED: [2013-03-16 Сб 16:02]
   and propose everybody to use only releases for the "main" test results storage
** DONE adjust cl-fad testsute adapter (test.lisp was renamed)
   CLOSED: [2013-03-03 Вс 22:21]
** DONE adjust cl-num-utils testsuite adapter (it switched to new test framework - clunit)
   CLOSED: [2013-03-07 Чт 04:26]
** DONE add clunit support to test-grid-testsuites
   CLOSED: [2013-03-07 Чт 04:26]
** DONE ASDF 2.32 on linux (switch back to ASCII?)
   CLOSED: [2013-03-16 Сб 15:17]
** DONE check if CCL rc2 still has the failures I reported for rc1
   CLOSED: [2013-03-16 Сб 15:16]
   Done: http://clozure.com/pipermail/openmcl-devel/2013-March/014184.html
** DONE review quicklisp 2013-02-17 results
   CLOSED: [2013-04-06 Сб 00:46]
** DONE review ECL results collected by Juan Jose
   CLOSED: [2013-04-06 Сб 00:46]
** DONE discuss with Paul Nathan the lisp implementations to run on his OS X PowerPC machine
   CLOSED: [2013-04-06 Сб 00:50]
   https://groups.google.com/d/msg/cl-test-grid/rY2mJcMFWv4/YPPNgkyPGHEJ
** DONE create test suite for drakma and add it to test grid
   CLOSED: [2013-03-23 Сб 11:08]
   https://github.com/edicl/drakma/pull/27
** DONE add optima test suite
   CLOSED: [2013-03-23 Сб 16:12]
** DONE [1 h] run quicklisp 2013-03-12 tests on my linux server
   CLOSED: [2013-04-06 Сб 03:20]
** DONE [8 h] fix the ASDF output-translation hangling by test-grid-agent which causes
   CLOSED: [2013-04-06 Сб 14:21]
   problems testing cffi-grovel dependent libraries on quicklisp 2013-03-12:
   https://groups.google.com/forum/?fromgroups=#!topic/cl-test-grid/mvrLUcIyy5g

   And rerun tests.
** DONE [8 h] preform pre-release testing of bordeaux-threads
   CLOSED: [2013-04-06 Сб 14:21]
   http://lists.common-lisp.net/pipermail/bordeaux-threads-devel/2013-March/000225.html
** DONE [4 h] run quicklisp 2013-03-12 tests on my windows machine
   CLOSED: [2013-04-14 Вс 00:57]
** DONE [6 h] review quicklisp 2013-03-12 results and report any possible regressions
   CLOSED: [2013-04-20 Сб 01:28]
** DONE [4 h] new test result attributes: :fail-condition-type and :fail-condition-text
   CLOSED: [2013-04-20 Сб 15:50]
   When unhandled SERIOUS-CONDITION is signalled during testing (asdf system load or testsuite),
   in addition to recording the :fail status, record the condition type and text.

   The main purpose of this task is to collect the list of foreign libraries
   needed by all quicklisp libraries and to recognize foreign library -related
   errors during reporting and exclude them from results diff.

   This particular task only covers collection and recording of :fail-condition-type
   and :fail-condition-text attributes, but not reporing.

** DONE [2 h] announce :fail-condition-type and :fail-condition-text
   CLOSED: [2013-04-21 Вс 10:59]
   After we collect test results, announce the possibility to retrieve
   the list of missing foreign libraries.

   The announcement: https://groups.google.com/forum/#!topic/cl-test-grid/P_-_CBJW84M
** DONE [1 h] Run Linux tests for Quicklisp 2013-04-20
   CLOSED: [2013-05-25 Сб 19:28]
** DONE [4 h] Run Windows tests for Quicklisp 2013-04-20
   CLOSED: [2013-05-25 Сб 19:29]
* July 2013
** DONE Commit the Nst testsute by Patrick Stein
   CLOSED: [2013-07-09 Вт 15:01]
** DONE notify cl-6502 author when there are test results
   CLOSED: [2013-07-09 Вт 15:07]
   He is definitely interested, as he have sent a merge request with testsuite adapter).

   Done in a comment to his blog post:
   http://blog.redlinernotes.com/posts/My-Lisp-Summer-Project.html

** DONE notify drakma mainteners when there are test results form drakma suite
   CLOSED: [2013-07-10 Ср 03:39]
   Posted as a comment here: https://github.com/edicl/drakma/pull/27
** DONE notify optima mainteners when there are test results from optima suite***
   CLOSED: [2013-07-10 Ср 03:46]
   Send email to tomo@cx4a.org.
** DONE Review and improve README.org
   CLOSED: [2013-07-24 Ср 10:39]
** DONE Add the "Credits" section to README
   CLOSED: [2013-07-24 Ср 10:39]
* September 2013
** DONE Add stmx testsuite
   CLOSED: [2013-09-02 Пн 02:56]
   https://github.com/cosmos72/stmx
** DONE National characters in DB: ensure DB and transactions are saved/read using utf-8
   CLOSED: [2013-09-24 Вт 20:20]
   We started to have national characters in DB after intorduction of :fail-condition-text
** DONE recognize FFI failures and reflect them in the reports
   CLOSED: [2013-09-24 Вт 20:20]
   in test results (maybe as :no-resource status, but it's better
   to have a special status, including the library name. that way
   we will have up to date list of foreign libraries necessary
   to have quicklisp fully working).

   Catch CFFI conditions, and in case of ABCL, failure to load JNA classes.
   This should be done for load test and for testsuite run.

   After this is implemented, it is desirable to re-run the tests on
   the current and the previous Quicklisps, so that we don't redundant
   items in the diff report (what previous was a load failure
   now becomes :no-resource - not a failure).

   The solution:
   The FFI failures are recognised based on :fail-condition-type
   and :fail-condition-text properties of result and
   marked by "ffi" note in reports, using our new "notes" feature.

** DONE Notes: manually annotate failures with explanations; have the explanations printed in reports
   CLOSED: [2013-10-13 Вс 03:49]
** DONE Notes referring launchpad issues should be printed as hyperlinks
   CLOSED: [2013-10-13 Вс 03:45]
** DONE Install more Lisps on cl-test-grid.cloud.efficito.com machine, as my Linux server is not available anymore.
   CLOSED: [2013-10-13 Вс 03:45]
* October 2013
** DONE DB maintenance
   CLOSED: [2013-10-21 Пн 03:18]
   - archive new test runs in cl-test-grid-results repo
   - clean the "main" storage from all the results except
     for the last 3 Quicklisp releases
** DONE Review the quiclisp 2013-10-03 results and report bugs
   CLOSED: [2013-11-10 Вс 01:10]
