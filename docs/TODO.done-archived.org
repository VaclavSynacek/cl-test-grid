;;;; -*- Mode: org; indent-tabs-mode: nil; coding: utf-8; show-trailing-whitespace: t -*-
* Milestone 0
** DONE information about test run:
   CLOSED: [2011-12-18 Вс 01:41]
   lisp-version-string, 
   lib-world, 
   author contact (get it from some settings file), 
   date, 
   run-duration
** DONE organize the database file format                                :db:
   CLOSED: [2011-12-18 Вс 01:42]
** DONE format the DB equally on all the Lisps                           :db:
   CLOSED: [2012-03-01 Чт 05:02]
   so that diff shows only new records.
   (use pprint ?)
   4h
** DONE better decision for library name representation.
   CLOSED: [2011-12-18 Вс 01:42]
     This representation is used in the:
     - libtest method parameter (eql specialized)
     - in the database and testrun datastructure.
     Possible alternatives:
     a keyword
        good for READ (package independent),
        good for EQL specializer
        good for GETF when working with the database
     a symbol from the test-grid package
        - good for EQL specializer
        - package dependent in READ
        - good for GETF when working with the database
        - adds one more (unnecessary) way to represent a library 
          in addition the specified for ASDF and Quicklisp
     or a downcased string
        - needs special handling in libtest eql specialization
        - good ro READ (package independent)
        - needs care to work with GETF when working with the database      
** DONE A tool to generate fake DB content to test reporting
   CLOSED: [2011-12-18 Вс 01:42]
** DONE simpliest reporting to overview the libraries test statuses [6/6] :report:
   CLOSED: [2012-01-13 Пт 14:26]
*** DONE Test Runs report: every test run as a row in a table :report:testruns:
    CLOSED: [2012-01-13 Пт 14:26]
     + legend or a tooltip in the report for test statuses
     + color for statuses
     + use the online blob URL in the report
*** DONE A pivot -like table report of library test results, allowing :report:pivot:
    CLOSED: [2011-12-18 Вс 01:43]
    rows/columns to be any of quicklisp distro, lisp version
    library name. With grouping and sorging.
*** DONE Fix rows and columns highlight in the pivot reports   :report:pivot:
    CLOSED: [2012-01-13 Пт 14:24]
*** DONE CSV export of the database to use it then with spreadsheets, :report:csv:
    CLOSED: [2011-12-18 Вс 01:57]
     google fusion tables, etc. Initial intent
     was to format it as a pivot for various projections 
     (by quicklisp releases, by platform, etc).
     But neither google docs spreadsheet, nor google fusion
     table allow as to format results as we want
     (the main problem, it is impossible to use
     a custom aggregation function for pivot
     cells, because standard aggregation functions
     are numeric, but we want a report cell
     to represent test result(s) for a particular
     library, i.e. :ok, :fail, :no-resource).
     5h
*** DONE Test that the test-duration field value                 :report:csv:
    CLOSED: [2011-12-28 Ср 20:20]
     (Common Lisp rational) can be read
     by spreadsheet software (MS/Open Offices,
     Google Spreadsheets).     
*** DONE an overview page with brief explanation of and links to all the reports :report:overview:
    CLOSED: [2011-12-18 Вс 02:18]
** DONE simple UI (command line) with guiding messages                   :ui:
   CLOSED: [2012-01-13 Пт 14:23]
   for the user who runs the tests. Spend as little 
   efforts as possible on this task, to release quickly.
   4h
** DONE readme with explanation of the project goal and              :readme:
   CLOSED: [2012-01-10 Вт 05:05]
   how to use it
   5h
** DONE change db format                                                 :db:
   CLOSED: [2011-12-18 Вс 01:55]
   + test run as plist (:descr <descr> :run-results <run-results>)
     instead of just (<descr> <run-results>)
   + run-results as a list instead of plist; libname
     which was a plist key is now a property of the lib-result 
     object. It is more convenient for standard mapping functions, 
     instead of current do-lib-results.
** DONE add more libraries: total number of 20 libraries              :agent:
   CLOSED: [2011-12-18 Вс 01:55]
   is enough for the beginning.
   Result: we have 23 libraries.
** DONE when loading of a library or library test system              :agent:
   CLOSED: [2011-12-18 Вс 01:55]
   fails, ensure we have the error description in the output
   0.5h
** DONE The "thank you" message: where exactly to submit test results?
   CLOSED: [2011-12-18 Вс 01:55]
   Specify an email or issue tracker of the cl-test-grid project.
** DONE how to store public (central) database and failed library 
   CLOSED: [2011-12-18 Вс 01:55]
   outputs (files).
   An appealing way is to store it in the same git repository 
   on github, but with the std-out files the repository will 
   quickly grow to an unconvenient size (for new people the
   checkout procedure will be too long to be considered
   convenient)
   5h
   Solution: files are stored in Google App Engine blob store.
** DONE More detailed output for libraries using the RT test
   CLOSED: [2011-12-18 Вс 01:55]
   framework. Ensure the libs with other test framework
   are all have sufficiently detailed output too.
** DONE Log of the BABEL tests (generated by the Stefil test          :agent:
   CLOSED: [2011-12-18 Вс 01:55]
   framework) does not contain information about
   errors. Add these details.
** DONE Some libraries (babel and cl-json) stil print messages to 
   CLOSED: [2011-12-18 Вс 01:56]
   console, meaning their output is not only *standard-output*
   and *standard-error*. Fix that, all the output
   should be in the log files, but not on console.
** DONE run the tests on all the implementations available for us.
   CLOSED: [2012-01-12 Чт 09:45]
** DONE publish the reports
   CLOSED: [2011-12-28 Ср 06:57]
** DONE test-run-info.lisp as attachment, instead of letter body     :server:
   CLOSED: [2011-12-29 Чт 04:53]
** DONE Fix lisp name sorting in pivot_lib-lisp_ql.html              :report:
   CLOSED: [2011-12-28 Ср 08:05]
** DONE finalize the decision what command user runs
   CLOSED: [2011-12-20 Вт 04:19]
   to performs the tests. Describe this main command
   in the README (in the first paragraph).
   The solution: user runs (load "agent.lisp"); precondition: quicklisp installed.
** DONE When the settings file is populated, inform user where     :settings:
   CLOSED: [2011-12-31 Сб 01:59]
   it is stored (and to be sure user understood us, ask
   him to press Enter before continuing).
** DONE When asking user for email, explain him more carefully     :settings:
   CLOSED: [2012-01-12 Чт 09:45]
   how the email will be used and ensure there is a way
   to avoid providing email.
** DONE ECL: recover from stack alexandria overflow and continute tests :ecl:agent:
   CLOSED: [2012-01-11 Ср 07:21]
** DONE ABCL: recover from cl-ppcre hung-up and continue tests   :abcl:agent:
   CLOSED: [2012-01-11 Ср 07:21]
** DONE Optimize horizontal space in the reports: the headers        :report:
   CLOSED: [2011-12-31 Сб 04:58]
   take to much space
** DONE more abstract accessor to parts of DB info instead of
   CLOSED: [2011-12-20 Вт 04:29]
   getf by properties: run-descr, run-results.
   1h
** DONE safe-read database
   CLOSED: [2011-12-20 Вт 04:29]
** DONE create a project with asdf system
   CLOSED: [2011-12-20 Вт 04:29]
   0.5h
** DONE DB file path based on the asdf system location
   CLOSED: [2011-12-20 Вт 04:29]
   0.5h
** DONE accumulate failed library output
   CLOSED: [2011-12-20 Вт 04:29]
   1h
** DONE run-libtests: redirect the library output to log file directly
   CLOSED: [2012-01-10 Вт 05:01]
   without caching it in memory. It is more convenient when you are 
   watching the testing process, you can observe the file being 
   populated with logs (because some libraries, like flexi-streams, 
   take time about minute to finish, and if during this minute
   nithing happens it is not user-friendly)

* Milestone 0.1
** DONE move closed TODO items to another (archive) file, so that the
   CLOSED: [2012-03-01 Чт 05:10]
   web presentation of the TODO file will be understandable 
   for the public.

** DONE new status, :expected-failure (or better :know-failure).
   CLOSED: [2012-03-01 Чт 05:05]
   Also maybe :unexpected-ok.
** DONE clean up the pivot reports Lisp code       :report:pivot:codequality:
   CLOSED: [2012-03-01 Чт 05:02]
* Milestone 0.3.1
** DONE automatically find regressions between quicklisp disto versions
   CLOSED: [2012-03-17 Ð¡Ð± 22:45]
** DONE test results detailed to individual tests for remaining test frameworks
   CLOSED: [2012-03-17 Ð¡Ð± 22:45]
** DONE add more libraries
   CLOSED: [2012-04-06 Пт 04:43]
   Added 34 libraries, the total number now is 57.
** DONE shorten the blob keys of online library logs
   CLOSED: [2012-04-06 Пт 04:46]


* 0.3.2 Reports Improve 1
** DONE floating report table headers, so that when we scroll, :report:pivot:
   CLOSED: [2012-04-22 Вс 04:14]
   headers are always visible and we always see what lisp/libary/lib-world
   corresponds to the table cell we are interested in.
** DONE Yellow color for known-fail and unexpected-ok aggregated statuses
   CLOSED: [2012-04-22 Вс 04:14]

* 0.3.3 Current: 
** DONE automate processing of library results submited by email
   CLOSED: [2012-06-15 Пт 01:46]
   
* 0.3.4 Test result for Quicklisp 2012-03, 2012-04
** DONE run tests with the newly added libraries on the quicklisp 2012-03-07,
   CLOSED: [2012-04-22 Вс 04:13]
   so that we can compare their results with the new quicklisp release 
   when it is out.
** DONE collect the test results for the next quicklisp release (2012-04-xx)
   CLOSED: [2012-04-22 Вс 04:13]
** DONE analyze the failures of Quicklisp 2012-04.
   CLOSED: [2012-07-23 Пн 04:39]
* 0.4.0 Test Running Robustness - lisp-agent
** DONE top level error handler in test-grid-agent:main
   CLOSED: [2012-07-23 Пн 20:17]
   write the unhandled error stacktrace (with causes)
   into log and exit - never enter debugger as the 
   program should be suitable to run in background with cron.
** DONE prevent starting of two agents (try to open a socket on a constant port)
   CLOSED: [2012-07-23 Пн 22:04]
** DONE create test-grid-agent:api-compatible-p
   CLOSED: [2012-07-23 Пн 23:45]
** DONE check what lisps other than CCL can run lisp-agent
   CLOSED: [2012-07-25 Ср 19:03]

** DONE update README.org to reflect the current status and priorities (in
   CLOSED: [2012-07-25 Ср 19:06]
   other words, reflect the changes during the last month)
** DONE prepare the announcement for the mailing-list
   CLOSED: [2012-07-27 Пт 05:48]
** DONE publish the lisp-agent - merge lisp-agent to master
   CLOSED: [2012-07-27 Пт 05:48]
** DONE Give every agent and unique ID. store the ID in the agent persistence.
   CLOSED: [2012-07-24 Вт 03:20]
** DONE error handling in the main process - during a test run and in other situations
   CLOSED: [2012-07-23 Пн 04:21]
   For example, after testing some library, the output file with library
   status is not found. Record :FAIL and proceed to further libraries.
   How to handle error during test results submission?
** DONE Agent: when test results upload failed, do not mark this lisp as tested in persistence.
   CLOSED: [2012-07-10 Вт 15:47]
** DONE run each test suite in a separate process
   CLOSED: [2012-06-15 Пт 01:44]
** DONE enforce the libraries source code recompilation on every test run
   CLOSED: [2012-07-09 Пн 16:54]
   by configuring asdf:output-translations to a temporary 
   subdirectory in the test-run directory
* 0.4.1 Code cleanup after finishing lisp-agent
** DONE review test suites which have hard-coded failures
   CLOSED: [2012-08-03 Пт 04:20]
   due to hang-ups or other problems and consider
   removing the hardcoded failures as we now have
   timeouts for hang-ups.
** DONE push forward breaking-up the old monolitic module test-grid:
   CLOSED: [2012-08-03 Пт 03:22]
   test grid systems will consist of modules for:
   - testsuites 
     a function libtest(libname) runs test suite
     of the specified library, downloading the lib from quicklisp
     if necessary, and returns test result in a unified format.
     I.e. the module knows how to invoke the library test suite
     and has adapters for test results of various test frameworks
     to the testgrid test result format.
   - agent
     the program with can run test in child lisp processes,
     knows which lisps the contributor has on the machine,
     decides when to run tests, and can upload the test
     results to the central server.
     [the changes required are small - agent will receive
     some code from the current test-grid.lisp,
     for example test suite log header/footer printing.
     Maybe the test suite log will include whole lisp
     process output, from the lisp startup (now we 
     start logging bit later, right before invoking
     the test suite)]
   - admin
     code to receive test results and add to db
     [remains unchanged]
   - reporting
     [reamains unchanged]
   - blobstore
     [remains unchanges]
   - data 
     objects moving between other modules: test run, test results,
     printing for these objects; and the database
   - utils

** DONE agent fs structure functions: make the workdir root
   CLOSED: [2012-08-03 Пт 03:21]
   a configurable property of agent, and fs structure
   functions shoud accept agent as a parameter.

   Fixes user request by Greg Pfeil: don't install quicklisp in ASDF source registry,
   https://github.com/cl-test-grid/cl-test-grid/issues/5

   In future it will allow for increased speed on multiprocessor
   systems by starting several agent processes, each assigned
   different set of lisp implementations. It would require
   another agent config property - lock-port, for the socket
   whcih assures agent is a signelton. Every 
   agent have different work-dir and different port.

   Several agents may even run in different threads
   of a single lisp process (if global shared libraries
   like asdf whould allow this).
* 0.5.0 Separate status value for compilation failure
  Important in general and a user reques by Juan Jose Garcia-Ripoll.
** DONE Test status should include separate indicator for the library compilation and loading.
   CLOSED: [2012-08-17 Пт 21:48]
   This allows to add even libraries without test cases to the
   test grid.

* 0.5.1 Test loading (including fresh recompilation) of every ASDF system Quicklisp.
  This means even if the library doesn't have a test suite,
  or the test suite is not yet integrated into the test-grid,
  we will know it's compilation status.

  Complications: one project may have more than one ASDF system,
  and in such case it's not clear how to relate compilation
  failures with test suite status, if only part of ASDF systems
  failed to compile.
** DONE Change agent to perform load test of every ASDF system in Quicklisp
   CLOSED: [2012-09-01 06:43]
** DONE Continuable test runs
   CLOSED: [2012-09-04 Вт 02:06]
   Don't loose test run results if it was interrupted (due to errors, network outage or agent termination)
** DONE Workaround the GAE issue https://code.google.com/p/googleappengine/issues/detail?id=8032
   CLOSED: [2012-09-04 Вт 02:05]
** DONE rework ABCL report
   CLOSED: [2012-09-14 Пт 06:39]
** DONE make sure old reports work when DB contains ASDF systems load results
   CLOSED: [2012-09-10 06:43]
** DONE collect results for libraries missed in Quicklisp 2012-09-09 results
   CLOSED: [2012-09-17 Пн 03:39]
   Some are missed because of agent bug: list of project was retrieved
   from wrong (old) quicklisp:
     cartesian-product-switch, cl-cheshire-cat, cl-grace, coleslaw,
     com.clearly-useful.iterator-protocol,
     com.clearly-useful.protocols, com.clearly-useful.sequence-protocol,
     formlets, glu-tessellate, infix-dollar-reader, lambda-lift,
     optima, place-modifiers, pzmq.

   bknr-datastore testsuite was not run because it was added to testgrid
   as bknr.datastore.

   Also run bknr-datastore on quicklisp 2012-08-11.

** DONE The list of projects to test should be reteieved from the quicklisp
   CLOSED: [2012-09-17 Пн 02:09]
        tested by agent in child processes, but not the quicklisp used
        to run the agent itself.
** DONE remove old versions of perform-test-run, run-tests, submit-logs.
   CLOSED: [2012-09-17 Пн 02:09]
** DONE rework and announce new quicklisp diff report
   CLOSED: [2012-09-18 Вт 00:21]
   <in progress>
** DONE remove the TODO list from the bottom of perform-test-run.lisp
   CLOSED: [2012-09-18 Вт 02:52]
** DONE when killing child process, sometimes we may have "No such process" simple-error
   CLOSED: [2012-09-18 Вт 06:34]
   if the process already finished. Handle it.
** DONE Testsuite timeout detection should sustain laptop hibernation
   CLOSED: [2012-09-18 Вт 21:49]
** DONE db.lisp: deterministic formatting of load-results
   CLOSED: [2012-09-19 Ср 00:21]
** DONE db.lisp: don't print testsuite values if there is no testsuite (values are NIL)
   CLOSED: [2012-09-19 Ср 00:21]
   don't print testing status/duration/log-key when absent
   (relevant for new resuls where most of the systems don't have test suite)
** DONE db.lisp: don't print load-results when absent
   CLOSED: [2012-09-19 Ср 00:21]
   (only releant for old results submitted before agent become able to test loading)
** DONE open launchpad tickets for the issues revealed by the quicklisp diff report
   CLOSED: [2012-09-19 Ср 01:27]

** DONE the load failures report, with libraries sorted topologically by dependencies
   CLOSED: [2012-09-25 Вт 22:10]
** DONE test fresh ECL to validate this fix:
   CLOSED: [2012-09-25 Вт 06:03]
   http://sourceforge.net/mailarchive/forum.php?thread_name=CANejTzrbiG71bStNg54J-sJ7QDBRwPgoOOGOWt7unrHfwMkByQ%40mail.gmail.com&forum_name=ecls-list
** DONE profile the reporing, to see why it's so slow now and fix
   CLOSED: [2012-09-26 Ср 03:58]
   The reason was set-exclusive-or, which takes minutes
   on large lists. Introduced fast-exclusive-or
   which uses hash tables if the arguments allow -
   :TEST is a designator of EQ, EQL, EQUAL or EQUALP.
** DONE document the new version of agent (how to run it, that it takes long and may be restarted)
   CLOSED: [2012-10-01 Пн 04:56]
** DONE increase the load-test timeout from 1 to 2 minutes
   CLOSED: [2012-09-15 Сб 10:02]
** DONE increase the load-test timeout from 2 to 5 minutes
   CLOSED: [2012-09-21 Пт 07:37]
